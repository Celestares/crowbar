----- Additional functionality to Crowbar -----
/ Able to make use of minimum, maximum, beginwith, endwith to filter password lists
- Regex charset * Difficult when striving for efficiency *
	/ Brute-force all password as usual and check against regex * easy *
	/ Example: Check aaaaaaaa, aaaaaaab, aaaaaaac, ... matches "[A-Z]{3}[0-9]{3}[a-zA-Z]{2}" before send to test
	- Brute-force all password as accordance to regex * difficult *
	- Example: "[A-Z]{3}[0-9]{3}[a-zA-Z]{2}" generates AAA000aa, AAA000ab, AAA000ac, ... and send to test

----- Documentations -----
- Document on HTTPS attempts
	- Created CA and server keys, set up HTTPS
	- Created php webpage that stores incoming post messages into a log file
	- Used wireshark to examine network traffic when a remote machine used the php webpage
	- Made proof-of-concept that text files can be encrypted into hexdump and decrypted back with some alterations
	- Explain why you think that it did not work
	- Challenges faced
- Document on Crowbar added functionalities
	- Added options
	- Explain the different features
	- Use cases for the different features
	- Challenges faced
- Update GitHub README.md

----- Presentation -----
- Create presentation slides for final sprint
	- Challenges faced
	- Things I have learned
